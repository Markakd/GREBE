module &module:1:0:$full:$large:$default;

/* Tests for load/store addressing modes. */

/* { dg-do compile } */
/* { dg-options "-fdump-tree-original" } */

prog kernel &Kernel(kernarg_u64 %input_ptr, kernarg_u64 %input_ptr2, kernarg_u64 %output_ptr)
{
	global_u32 %global_array[4];

	ld_kernarg_u64 $d0, [%input_ptr];
	ld_kernarg_u64 $d2, [%input_ptr2];
	ld_global_u32 $s0, [$d0];
	ld_global_u64 $d1, [$d2 + 4];

	ld_global_u32 $s2, [%global_array][$d1 + 4];

	ld_kernarg_u64 $d0, [%output_ptr];
	st_global_u32 $s0, [$d0];
	st_global_u32 $s1, [$d0 + 4];
	st_global_u32 $s2, [$d0 + 8];

	ret;
};

/* %input_ptr, %input_ptr2 and %output_ptr accesses should generate offsets to the __args array */
/* { dg-final { scan-tree-dump "__args;\[\n \]+d0 =" "original"} } */
/* { dg-final { scan-tree-dump "\\\(__args \\\+ 8\\\);\[\n \]+d2 =" "original"} } */
/* { dg-final { scan-tree-dump "\\\(__args \\\+ 16\\\);\[\n \]+d0 =" "original"} } */

/* ld_global_u32 $s0, [$d0] */
/* { dg-final { scan-tree-dump "\\\*\\\(unsigned int \\\*\\\) d0;\[\n \]+s0 =" "original"} } */

/* ld_global_u64 $d1, [$d2 + 4] pointer arithmetics*/
/* { dg-final { scan-tree-dump "d2 \\\+ 4\\\);\[\n \]+d1 = " "original"} } */

/* ld_global_u32 $s2, [%global_array][$d1 + 4]; is the most complex form */
/* { dg-final { scan-tree-dump "\\\(unsigned long\\\) &_Kernel.global_array\\\) \\\+ \\\(unsigned long\\\) d1\\\) \\\+ 4" "original" } } */
